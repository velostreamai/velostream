name: Schema Validation

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  validate-schema:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust Environment  
      uses: ./.github/actions/setup-rust
    
    - name: Generate current schemas
      run: |
        echo "üîß Generating current JSON Schema..."
        cargo run --bin velo-schema-generator --no-default-features
        
    - name: Check schema consistency
      run: |
        echo "üîç Checking if generated schema matches committed version..."
        
        # Compare generated schema with committed version
        if ! diff -u velostream-config.schema.json velostream-config.schema.json.expected 2>/dev/null; then
          echo "‚ùå Schema validation failed!"
          echo "The generated schema doesn't match the committed version."
          echo ""
          echo "This indicates either:"
          echo "  1. ConfigSchemaProvider implementations have changed"
          echo "  2. The committed schema is out of date"
          echo ""
          echo "To fix this:"
          echo "  1. Run: cargo run --bin velo-schema-generator --no-default-features"
          echo "  2. Commit the updated schema files"
          echo ""
          echo "Generated vs Expected diff:"
          diff -u velostream-config.schema.json velostream-config.schema.json.expected || true
          exit 1
        fi
        
        echo "‚úÖ Schema validation passed - schemas are up to date!"
        
    - name: Validate schema syntax
      run: |
        echo "üîç Validating JSON Schema syntax..."
        
        # Check that the schema is valid JSON
        if ! python3 -m json.tool velostream-config.schema.json > /dev/null; then
          echo "‚ùå Generated schema is not valid JSON!"
          exit 1
        fi
        
        # Check VS Code settings file
        if ! python3 -m json.tool .vscode/velo-schema-settings.json > /dev/null; then
          echo "‚ùå Generated VS Code settings are not valid JSON!"  
          exit 1
        fi
        
        echo "‚úÖ Schema syntax validation passed!"
        
    - name: Test schema with example config
      run: |
        echo "üîç Testing schema with example configuration..."
        
        # Install JSON Schema validator
        pip3 install jsonschema PyYAML
        
        # Create and run validation script
        python3 -c "
        import json
        import yaml
        import jsonschema
        from jsonschema import validate
        import sys
        
        # Load schema
        with open('velostream-config.schema.json', 'r') as f:
            schema = json.load(f)
        
        # Load and validate example YAML config
        with open('velo-config.example.yaml', 'r') as f:
            config = yaml.safe_load(f)
        
        try:
            validate(instance=config, schema=schema)
            print('‚úÖ Example configuration validates against schema!')
        except jsonschema.exceptions.ValidationError as e:
            print(f'‚ùå Example configuration failed validation: {e}')
            sys.exit(1)
        except Exception as e:
            print(f'‚ùå Validation error: {e}')
            sys.exit(1)
        "