# VeloStream Ultra-Low Latency Configuration
# Optimized for < 10ms latency financial trading systems

kafka:
  brokers: "localhost:9092"
  security_protocol: "PLAINTEXT"
  group_id: "velo-sql-low-latency"
  client_id: "velo-sql-fast"
  
  # Ultra-low latency producer settings
  acks: "1"                    # Fast acknowledgments (not "all")
  retries: 0                   # No retries for absolute speed
  batch_size: 1                # Send each message immediately
  linger_ms: 0                 # No batching delay
  buffer_memory: 33554432      # 32MB buffer
  compression_type: "none"     # No compression overhead
  max_in_flight_requests_per_connection: 1  # Ordering guarantee
  
  # Ultra-low latency consumer settings
  fetch_min_bytes: 1           # Don't wait for batches
  fetch_max_wait_ms: 1         # 1ms maximum wait
  max_poll_records: 10         # Process small batches quickly
  session_timeout_ms: 6000     # Fast failure detection
  heartbeat_interval_ms: 2000  # Frequent heartbeats
  auto_offset_reset: "latest"  # Start from newest messages

server:
  port: 8080
  host: "0.0.0.0"
  max_connections: 1000        # High concurrency for trading systems
  request_timeout_ms: 5000     # 5 second timeout (fast)
  keep_alive_timeout_ms: 30000

sql:
  max_memory_mb: 4096          # More memory for speed
  worker_threads: 8            # More threads for parallel processing
  query_timeout_ms: 10000      # 10 second query timeout
  max_result_rows: 1000        # Smaller result sets for speed

logging:
  level: "warn"                # Minimal logging for performance
  format: "json"
  file: "velo-low-latency.log"

monitoring:
  enable_metrics: true
  metrics_port: 9090
  health_check_interval_ms: 1000  # Frequent health checks

jobs:
  max_concurrent_jobs: 50      # More concurrent jobs
  job_timeout_ms: 30000        # Shorter job timeouts
  enable_job_persistence: false

performance:
  buffer_size: 100             # Small buffers for immediate processing
  batch_size: 10               # Tiny batches
  flush_interval_ms: 1         # Immediate flush
  enable_compression: false    # No compression overhead
  
serialization:
  default_format: "json"       # JSON for speed and compatibility
  financial_precision: true    # Enable ScaledInteger for exact precision
  decimal_places: 4            # 4 decimal places for financial data